"""
https://contest.yandex.ru/contest/45468/problems/26/


26. Самый дешевый путь
Ограничение времени	1 секунда
Ограничение памяти	256Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
В каждой клетке прямоугольной таблицы N×M записано некоторое число. Изначально игрок находится в левой верхней
клетке. За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено). При проходе через
клетку с игрока берут столько килограммов еды, какое число записано в этой клетке (еду берут также за первую и
последнюю клетки его пути).
Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.

Формат ввода
Вводятся два числа N и M — размеры таблицы (1≤N≤20,1≤M≤20). Затем идет N строк по M чисел в каждой — размеры штрафов
в килограммах за прохождение через соответствующие клетки
(числа от 0 до 100).
Формат вывода
Выведите минимальный вес еды в килограммах, отдав которую можно попасть в правый нижний угол.
Пример
Ввод	Вывод
5 5
1 1 1 1 1
3 100 100 100 100
1 1 1 1 1
2 2 2 2 1
1 1 1 1 1
11
"""


def get_min_path(matrix, n, m):
    dp = [[float('inf')] * (m + 1) for _ in range(n + 1)]
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            if i == j == 1:
                dp[i][j] = matrix[i - 1][j - 1]
            else:
                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + matrix[i - 1][j - 1]
    return dp[-1][-1]


n, m = map(int, input().split())
matrix = tuple((tuple(map(int, input().split())) for _ in range(n)))

print(get_min_path(matrix, n, m))
